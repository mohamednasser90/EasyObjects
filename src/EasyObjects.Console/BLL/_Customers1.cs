/*
===============================================================================
This file was automatically generated by the EasyObjects.NET T4 Template

** IMPORTANT  ** 

This object is 'abstract' which means you need to inherit from it to be able
to instantiate it.  This is very easily done. You can override properties and
methods in your derived class, this allows you to regenerate this class at any
time and not worry about overwriting custom code. 

NEVER EDIT THIS FILE.

The following connection settings were used to generate this file

    Connection String Name: `Default`
    Provider:               `System.Data.SqlClient`
    Connection String:      `server=(local)\SQLEXPRESS;database=Northwind;Integrated Security=true`
    Include Views:          `False`

===============================================================================
*/
using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Data;
using System.Data.Common;
using System.Data.SqlClient;
using NCI.EasyObjects;

namespace EasyObjects.Console.BLL
{
    public class CustomersSchema : NCI.EasyObjects.Schema
    {
        private static List<SchemaItem> _entries;
        public static SchemaItem CustomerID = new SchemaItem("CustomerID", DbType.StringFixedLength, SchemaItemJustify.None, 5, false, true, true, false);
        public static SchemaItem CompanyName = new SchemaItem("CompanyName", DbType.String, SchemaItemJustify.None, 40, false, true, true, false);
        public static SchemaItem ContactName = new SchemaItem("ContactName", DbType.String, SchemaItemJustify.None, 30, false, true, true, false);
        public static SchemaItem ContactTitle = new SchemaItem("ContactTitle", DbType.String, SchemaItemJustify.None, 30, false, true, true, false);
        public static SchemaItem Address = new SchemaItem("Address", DbType.String, SchemaItemJustify.None, 60, false, true, true, false);
        public static SchemaItem City = new SchemaItem("City", DbType.String, SchemaItemJustify.None, 15, false, true, true, false);
        public static SchemaItem Region = new SchemaItem("Region", DbType.String, SchemaItemJustify.None, 15, false, true, true, false);
        public static SchemaItem PostalCode = new SchemaItem("PostalCode", DbType.String, SchemaItemJustify.None, 10, false, true, true, false);
        public static SchemaItem Country = new SchemaItem("Country", DbType.String, SchemaItemJustify.None, 15, false, true, true, false);
        public static SchemaItem Phone = new SchemaItem("Phone", DbType.String, SchemaItemJustify.None, 24, false, true, true, false);
        public static SchemaItem Fax = new SchemaItem("Fax", DbType.String, SchemaItemJustify.None, 24, false, true, true, false);

        public override List<SchemaItem> SchemaEntries
        {
            get
            {
                if (_entries == null || _entries.Count == 0)
                {
                    _entries = new List<SchemaItem>
                    {
                        CustomersSchema.CustomerID,
                        CustomersSchema.CompanyName,
                        CustomersSchema.ContactName,
                        CustomersSchema.ContactTitle,
                        CustomersSchema.Address,
                        CustomersSchema.City,
                        CustomersSchema.Region,
                        CustomersSchema.PostalCode,
                        CustomersSchema.Country,
                        CustomersSchema.Phone,
                        CustomersSchema.Fax,
                    };
                }

                return _entries;
            }
        }

        public static bool HasAutoKey { get => false; }
        public static bool HasRowID { get => false; }
    }

    /// <summary>
    /// A class which represents the Customers table.
    /// </summary>
	[Table("Customers")]
	public partial class Customer
	{
	    [Key]
       public virtual string CustomerID { get; set; }
       public virtual string CompanyName { get; set; }
       public virtual string ContactName { get; set; }
       public virtual string ContactTitle { get; set; }
       public virtual string Address { get; set; }
       public virtual string City { get; set; }
       public virtual string Region { get; set; }
       public virtual string PostalCode { get; set; }
       public virtual string Country { get; set; }
       public virtual string Phone { get; set; }
       public virtual string Fax { get; set; }
	}

}

